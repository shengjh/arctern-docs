# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, zilliz
# This file is distributed under the same license as the Arctern package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Arctern \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-06-06 20:03+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/api_reference/standalone_api/geoseries.rst:4
msgid "GeoSeries"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:7
msgid ""
"GeoSeries is a Series to store and process geometry data by extending "
"Pandas Series. It internally store geometry as bytes object."
msgstr "GeoSeries 是通过扩展 Pandas Series 来存储和处理几何体的 Series"

#: ../../source/api_reference/standalone_api/geoseries.rst:11
msgid "Constructor"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:18:<autosummary>:1
msgid ""
":obj:`GeoSeries <arctern.GeoSeries>`\\ \\(\\[data\\, index\\, name\\, "
"crs\\]\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:18:<autosummary>:1
msgid "A Series to store geometry data which is WKB formed bytes object."
msgstr "存储 WKB 格式的字节对象几何体的 Series。"

#: ../../source/api_reference/standalone_api/geoseries.rst:20
msgid "Attributes"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:33:<autosummary>:1
msgid ":obj:`GeoSeries.is_valid <arctern.GeoSeries.is_valid>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:33:<autosummary>:1
msgid "Check if each geometry is of valid geometry format."
msgstr "判断每个几何体是否有效。"

#: ../../source/api_reference/standalone_api/geoseries.rst:33:<autosummary>:1
msgid ":obj:`GeoSeries.length <arctern.GeoSeries.length>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:33:<autosummary>:1
msgid "Calculate the length of each geometry."
msgstr "计算每个几何体的长度"

#: ../../source/api_reference/standalone_api/geoseries.rst:33:<autosummary>:1
msgid ":obj:`GeoSeries.is_simple <arctern.GeoSeries.is_simple>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:33:<autosummary>:1
msgid "Check whether each geometry is \"simple\"."
msgstr "判断每个几何体是否简单。"

#: ../../source/api_reference/standalone_api/geoseries.rst:33:<autosummary>:1
msgid ":obj:`GeoSeries.area <arctern.GeoSeries.area>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:33:<autosummary>:1
msgid "Calculate the 2D Cartesian (planar) area of each geometry."
msgstr "计算几何体的二维笛卡尔（平面）面积。"

#: ../../source/api_reference/standalone_api/geoseries.rst:33:<autosummary>:1
msgid ":obj:`GeoSeries.geom_type <arctern.GeoSeries.geom_type>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:33:<autosummary>:1
msgid "For each geometry in geometries, return a string that indicates is type."
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:33:<autosummary>:1
msgid ":obj:`GeoSeries.centroid <arctern.GeoSeries.centroid>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:33:<autosummary>:1
msgid "Compute the centroid of each geometry."
msgstr "计算每个几何体的中心点"

#: ../../source/api_reference/standalone_api/geoseries.rst:33:<autosummary>:1
msgid ":obj:`GeoSeries.convex_hull <arctern.GeoSeries.convex_hull>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:33:<autosummary>:1
msgid ""
"For each geometry, compute the smallest convex geometry that encloses all"
" geometries in it."
msgstr "对于 GeoSeries 对象中的每个几何体，计算包围它的最小的凸几何体"

#: ../../source/api_reference/standalone_api/geoseries.rst:33:<autosummary>:1
msgid ":obj:`GeoSeries.npoints <arctern.GeoSeries.npoints>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:33:<autosummary>:1
msgid "Calculates the points number for each geometry."
msgstr "对于 GeoSeries 对象中的每个几何体，计算它的点的数量。"

#: ../../source/api_reference/standalone_api/geoseries.rst:33:<autosummary>:1
msgid ":obj:`GeoSeries.envelope <arctern.GeoSeries.envelope>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:33:<autosummary>:1
msgid ""
"Compute the double-precision minimum bounding box geometry for each "
"geometry."
msgstr "对于 GeoSeries 对象中的每个几何体，计算它的最小矩形边界范围。"

#: ../../source/api_reference/standalone_api/geoseries.rst:37
msgid "Constructing Geometry"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:47:<autosummary>:1
msgid ""
":obj:`GeoSeries.point <arctern.GeoSeries.point>`\\ \\(x\\, y\\[\\, "
"crs\\]\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:47:<autosummary>:1
msgid "Construct Point geometries according to the coordinates."
msgstr "根据坐标集合构造 Point 几何体。"

#: ../../source/api_reference/standalone_api/geoseries.rst:47:<autosummary>:1
msgid ""
":obj:`GeoSeries.polygon_from_envelope "
"<arctern.GeoSeries.polygon_from_envelope>`\\ \\(min\\_x\\, ...\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:47:<autosummary>:1
msgid ""
"Construct polygon(rectangle) geometries from arr_min_x, arr_min_y, "
"arr_max_x, arr_max_y and special coordinate system."
msgstr "对于 GeoSeries 对象中的每个几何体，根据给定的参数计算它的最小矩形边界范围，且该矩形的边与坐标轴平行。"

#: ../../source/api_reference/standalone_api/geoseries.rst:47:<autosummary>:1
msgid ""
":obj:`GeoSeries.geom_from_geojson "
"<arctern.GeoSeries.geom_from_geojson>`\\ \\(json\\[\\, crs\\]\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:47:<autosummary>:1
msgid "Construct geometry from the GeoJSON representation string."
msgstr "根据 GeoJSON 代表字符串构造几何体。"

#: ../../source/api_reference/standalone_api/geoseries.rst:47:<autosummary>:1
msgid ":obj:`GeoSeries.as_geojson <arctern.GeoSeries.as_geojson>`\\ \\(\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:47:<autosummary>:1
msgid "Transform each to GeoJSON format string."
msgstr "将几何体转换为 GeoJSON 格式字符串。"

#: ../../source/api_reference/standalone_api/geoseries.rst:47:<autosummary>:1
msgid ":obj:`GeoSeries.to_wkt <arctern.GeoSeries.to_wkt>`\\ \\(\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:47:<autosummary>:1
msgid "Transform each geometry to WKT formed string."
msgstr "将几何体转换为 WKT 格式字符串。"

#: ../../source/api_reference/standalone_api/geoseries.rst:47:<autosummary>:1
msgid ":obj:`GeoSeries.to_wkb <arctern.GeoSeries.to_wkb>`\\ \\(\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:47:<autosummary>:1
msgid "Transform each geometry to WKB formed bytes object."
msgstr "将几何体转换为 WKB 格式字符串。"

#: ../../source/api_reference/standalone_api/geoseries.rst:49
msgid "Processing Geometry"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:62:<autosummary>:1
msgid ":obj:`GeoSeries.buffer <arctern.GeoSeries.buffer>`\\ \\(distance\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:62:<autosummary>:1
msgid ""
"For each geometry, returns a geometry that represents all points whose "
"distance from this geos is less than or equal to \"distance\"."
msgstr "对于 GeoSeries 对象中的每个几何体，创建一个与它的最远距离不大于 distance 的几何体。"

#: ../../source/api_reference/standalone_api/geoseries.rst:62:<autosummary>:1
msgid ""
":obj:`GeoSeries.precision_reduce <arctern.GeoSeries.precision_reduce>`\\ "
"\\(precision\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:62:<autosummary>:1
msgid ""
"For the coordinates of each geometry, reduce the number of significant "
"digits to the given number."
msgstr "对于 GeoSeries 对象中的每个几何体，根据指定的有效数字位数 precision 创建降低坐标精度后的几何体。"

#: ../../source/api_reference/standalone_api/geoseries.rst:62:<autosummary>:1
msgid ""
":obj:`GeoSeries.intersection <arctern.GeoSeries.intersection>`\\ "
"\\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:62:<autosummary>:1
msgid "Calculate the point set intersection between each geometry and other."
msgstr "对于 GeoSeries 对象中的每个几何体，计算它与 other 对象中相同位置的几何体之间交集。"

#: ../../source/api_reference/standalone_api/geoseries.rst:62:<autosummary>:1
msgid ":obj:`GeoSeries.make_valid <arctern.GeoSeries.make_valid>`\\ \\(\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:62:<autosummary>:1
msgid ""
"Create a valid representation of each geometry without losing any of the "
"input vertices."
msgstr ""
"对于 GeoSeries "
"对象中的每个几何体，根据它创建一个新的有效的几何体。在构造新几何体过程中，不会删除原始几何体的任何顶点。如果原始几何体本来就是有效的，则直接返回原始几何体。"

#: ../../source/api_reference/standalone_api/geoseries.rst:62:<autosummary>:1
msgid ":obj:`GeoSeries.simplify <arctern.GeoSeries.simplify>`\\ \\(tolerance\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:62:<autosummary>:1
msgid ""
"Returns a \"simplified\" version for each geometry using the Douglas-"
"Peucker algorithm."
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:62:<autosummary>:1
msgid ":obj:`GeoSeries.set_crs <arctern.GeoSeries.set_crs>`\\ \\(crs\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:62:<autosummary>:1
msgid "Set the coordinate system for the GeoSeries."
msgstr "设置 GeoSeries 的坐标系。"

#: ../../source/api_reference/standalone_api/geoseries.rst:62:<autosummary>:1
msgid ":obj:`GeoSeries.crs <arctern.GeoSeries.crs>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:62:<autosummary>:1
#, fuzzy
msgid "Return the coordinate system of the GeoSeries."
msgstr "设置 GeoSeries 的坐标系。"

#: ../../source/api_reference/standalone_api/geoseries.rst:62:<autosummary>:1
msgid ":obj:`GeoSeries.to_crs <arctern.GeoSeries.to_crs>`\\ \\(crs\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:62:<autosummary>:1
msgid "Transform each geometry to a different coordinate reference system."
msgstr "转换几何体的 坐标参考系。"

#: ../../source/api_reference/standalone_api/geoseries.rst:62:<autosummary>:1
msgid ":obj:`GeoSeries.curve_to_line <arctern.GeoSeries.curve_to_line>`\\ \\(\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:62:<autosummary>:1
msgid ""
"Convert curves in each geometry to approximate linear representation, "
"e.g., CIRCULAR STRING to regular LINESTRING, CURVEPOLYGON to POLYGON, and"
" MULTISURFACE to MULTIPOLYGON."
msgstr "对于 GeoSeries 对象中的每个几何体，计算它的近似表示。近似表示的方法是将每个几何图形中的曲线转换为近似线性表示。"

#: ../../source/api_reference/standalone_api/geoseries.rst:64
msgid "Spatial Relationship"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:75:<autosummary>:1
msgid ":obj:`GeoSeries.geom_equals <arctern.GeoSeries.geom_equals>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:75:<autosummary>:1
msgid "Check whether each geometry is \"spatially equal\" to other."
msgstr "对于 GeoSeries 对象中的每个几何体，判断它是否与 other 对象中相同位置的几何体等价。“等价”表示两个几何体的几何结构相同。"

#: ../../source/api_reference/standalone_api/geoseries.rst:75:<autosummary>:1
msgid ":obj:`GeoSeries.touches <arctern.GeoSeries.touches>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:75:<autosummary>:1
msgid "Check whether each geometry \"touches\" other."
msgstr "对于 GeoSeries 对象中的每个几何体，判断它是否与 other 对象中相同位置的几何体相邻。“相邻”表示两个几何体在边界上有共同的点。"

#: ../../source/api_reference/standalone_api/geoseries.rst:75:<autosummary>:1
msgid ":obj:`GeoSeries.overlaps <arctern.GeoSeries.overlaps>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:75:<autosummary>:1
msgid "Check whether each geometry \"spatially overlaps\" other."
msgstr "对于 GeoSeries 对象中的每个几何体，判断它是否与 other 对象中相同位置的几何体重叠。“重叠”表示两个几何体相交且不互相包含。"

#: ../../source/api_reference/standalone_api/geoseries.rst:75:<autosummary>:1
msgid ":obj:`GeoSeries.crosses <arctern.GeoSeries.crosses>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:75:<autosummary>:1
msgid "Check whether each geometry and other(elementwise) \"spatially cross\"."
msgstr " 对于 GeoSeries 对象中的每个几何体，判断它是否与 other 对象中相同位置的几何体相交。"

#: ../../source/api_reference/standalone_api/geoseries.rst:75:<autosummary>:1
msgid ":obj:`GeoSeries.contains <arctern.GeoSeries.contains>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:75:<autosummary>:1
msgid "Check whether each geometry contains other (elementwise)."
msgstr "对于 GeoSeries 对象中的每个几何体，判断它是否包含 other 对象中相同位置的几何体。"

#: ../../source/api_reference/standalone_api/geoseries.rst:75:<autosummary>:1
msgid ":obj:`GeoSeries.intersects <arctern.GeoSeries.intersects>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:75:<autosummary>:1
msgid "Check whether each geometry intersects other (elementwise)."
msgstr " 对于 GeoSeries 对象中的每个几何体，判断它是否与 other 对象中相同位置的几何体存在交集。"

#: ../../source/api_reference/standalone_api/geoseries.rst:75:<autosummary>:1
msgid ":obj:`GeoSeries.within <arctern.GeoSeries.within>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:75:<autosummary>:1
msgid "Check whether each geometry is within other (elementwise)."
msgstr "对于 GeoSeries 对象中的每个几何体，判断它是否在 other 对象中相同位置的几何体的内部。"

#: ../../source/api_reference/standalone_api/geoseries.rst:77
msgid "Measurement"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:84:<autosummary>:1
msgid ""
":obj:`GeoSeries.distance_sphere <arctern.GeoSeries.distance_sphere>`\\ "
"\\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:84:<autosummary>:1
msgid "Return minimum distance in meters between two lon/lat points."
msgstr "返回两个经纬度点之间的以米为单位的距离。"

#: ../../source/api_reference/standalone_api/geoseries.rst:84:<autosummary>:1
msgid ":obj:`GeoSeries.distance <arctern.GeoSeries.distance>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:84:<autosummary>:1
msgid ""
"Calculates the minimum 2D Cartesian (planar) distance between each "
"geometry and other."
msgstr "计算两个几何体之间的最小二维笛卡尔（平面）距离。"

#: ../../source/api_reference/standalone_api/geoseries.rst:84:<autosummary>:1
msgid ""
":obj:`GeoSeries.hausdorff_distance "
"<arctern.GeoSeries.hausdorff_distance>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:84:<autosummary>:1
msgid "Returns the Hausdorff distance between each geometry and other."
msgstr ""
" 对于 GeoSeries 对象中的每个几何体，判断它与 other 对象中相同位置的几何体之间的 Hausdorff "
"距离。此距离用于度量两个几何体之间的相似度。"

#: ../../source/api_reference/standalone_api/geoseries.rst:86
msgid "Aggregation"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:92:<autosummary>:1
msgid ":obj:`GeoSeries.unary_union <arctern.GeoSeries.unary_union>`\\ \\(\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:92:<autosummary>:1
msgid ""
"Return a geometry that represents the union of all geometries in the "
"GeoSeries."
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:92:<autosummary>:1
msgid ":obj:`GeoSeries.envelope_aggr <arctern.GeoSeries.envelope_aggr>`\\ \\(\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:92:<autosummary>:1
msgid ""
"Compute the double-precision minimum bounding box geometry for the union "
"of all geometries."
msgstr "对于 GeoSeries 对象中的所有几何体集合，计算它的最小矩形边界范围。"

#: ../../source/api_reference/standalone_api/geoseries.rst:94
msgid "Pandas Methods"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:102:<autosummary>:1
msgid ":obj:`GeoSeries.isna <arctern.GeoSeries.isna>`\\ \\(\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:102:<autosummary>:1
msgid "Detect missing values."
msgstr "检测丢失值"

#: ../../source/api_reference/standalone_api/geoseries.rst:102:<autosummary>:1
msgid ":obj:`GeoSeries.notna <arctern.GeoSeries.notna>`\\ \\(\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:102:<autosummary>:1
msgid "Detect non-missing values."
msgstr "检测未丢失值"

#: ../../source/api_reference/standalone_api/geoseries.rst:102:<autosummary>:1
msgid ""
":obj:`GeoSeries.fillna <arctern.GeoSeries.fillna>`\\ \\(\\[value\\, "
"method\\, axis\\, ...\\]\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:102:<autosummary>:1
msgid "Fill NA values with a geometry, which can be WKT or WKB formed."
msgstr "用几何体填补 NA 值，其可为 WKT 或 WKB 格式。"

#: ../../source/api_reference/standalone_api/geoseries.rst:102:<autosummary>:1
msgid ":obj:`GeoSeries.equals <arctern.GeoSeries.equals>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/geoseries.rst:102:<autosummary>:1
msgid "Test whether two objects contain the same elements."
msgstr "测试两个几何体是否含有相同元素。"

#~ msgid ":obj:`GeoSeries.geometry_type <arctern.GeoSeries.geometry_type>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`GeoSeries.simplify_preserve_topology "
#~ "<GeoSeries.simplify_preserve_topology>`\\"
#~ msgstr ""

#~ msgid ":obj:`GeoSeries.union_aggr <arctern.GeoSeries.union_aggr>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ":obj:`GeoSeries.geom_type <arctern.GeoSeries.geom_type>`\\"
#~ msgstr ""

#~ msgid ""
#~ "For each geometry in geometries, return"
#~ " a string that indicates is type."
#~ msgstr "几何体中的每个几何体返回表示类型的字符串。"

#~ msgid ""
#~ ":obj:`GeoSeries.simplify <arctern.GeoSeries.simplify>`\\ "
#~ "\\(tolerance\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns a \"simplified\" version for "
#~ "each geometry using the Douglas-Peucker"
#~ " algorithm."
#~ msgstr ""

#~ msgid ":obj:`GeoSeries.unary_union <arctern.GeoSeries.unary_union>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "Return a geometry that represents the"
#~ " union of all geometries in the "
#~ "GeoSeries."
#~ msgstr "返回代表 GeoSeries 中的所有几何体集合的几何体。"

#~ msgid ":obj:`GeoSeries.geom_type <GeoSeries.geom_type>`\\"
#~ msgstr ""

#~ msgid ":obj:`GeoSeries.simplify <GeoSeries.simplify>`\\"
#~ msgstr ""

#~ msgid ":obj:`GeoSeries.unary_union <GeoSeries.unary_union>`\\"
#~ msgstr ""

