# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, zilliz
# This file is distributed under the same license as the Arctern package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Arctern \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-06-07 10:00+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:2
msgid "arctern.GeoSeries"
msgstr ""

#: arctern.GeoSeries:1 of
msgid "A Series to store geometry data which is WKB formed bytes object."
msgstr "Series 存储几何体，此几何体是 WKB 格式的字节对象。"

#: arctern.GeoSeries of
msgid "参数"
msgstr ""

#: arctern.GeoSeries:4 of
msgid "Geometries to store, which can be WKB formed bytes or WKT formed string."
msgstr "要存储的几何体，可以是 WKB 格式的字节或 WKT 格式的字符串。"

#: arctern.GeoSeries:7 of
msgid ""
"Same to Pandas Series. Values must be hashable and have the same length "
"as `data`. Non-unique index values are allowed. Will default to "
"RangeIndex (0, 1, 2, ..., n) if not provided. If both a dict and index "
"sequence are used, the index will override the keys found in the dict."
msgstr "与 pandas Series 相同。值必须是可哈希的，并且与 `data` 的长度相同。允许使用非唯一索引值。如果未提供，则默认为 RangeIndex（0，1，2，…，n）。如果同时使用了字典和索引序列，则索引将覆盖在字典中找到的键。"

#: arctern.GeoSeries:15 of
msgid "The name to give to the Series."
msgstr "赋给 Series 的名称"

#: arctern.GeoSeries:18 of
msgid "The coordinate system for the GeoSeries, now only support SRID form."
msgstr "GeoSeries 的参考坐标系现在只支持 SRID 格式。"

#: arctern.GeoSeries:20 of
msgid "Additional arguments passed to the GeoSeries constructor, e.g. ``copy``"
msgstr "传到 GeoSeries 构造器中的其他参数，例如 ``copy``。"

#: arctern.GeoSeries of
msgid "example"
msgstr "例子"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:12
msgid "Methods"
msgstr "方法"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ":obj:`as_geojson <arctern.GeoSeries.as_geojson>`\\ \\(\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid "Transform each to GeoJSON format string."
msgstr "将每个几何体转换为 GeoJSON 格式的字符串。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ":obj:`buffer <arctern.GeoSeries.buffer>`\\ \\(distance\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ""
"For each geometry, returns a geometry that represents all points whose "
"distance from this geos is less than or equal to \"distance\"."
msgstr "对于 GeoSeries 对象中的每个几何体，创建一个与它的最远距离不大于 `distance` 的几何体。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ":obj:`contains <arctern.GeoSeries.contains>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid "Check whether each geometry contains other (elementwise)."
msgstr "对于 GeoSeries 对象中的每个几何体，判断它是否包含 `other` 对象中相同位置的几何体。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ":obj:`crosses <arctern.GeoSeries.crosses>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid "Check whether each geometry and other(elementwise) \"spatially cross\"."
msgstr "对于 GeoSeries 对象中的每个几何体，判断它是否与 other 对象中相同位置的几何体相交。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ":obj:`curve_to_line <arctern.GeoSeries.curve_to_line>`\\ \\(\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ""
"Convert curves in each geometry to approximate linear representation, "
"e.g., CIRCULAR STRING to regular LINESTRING, CURVEPOLYGON to POLYGON, and"
" MULTISURFACE to MULTIPOLYGON."
msgstr "对于 GeoSeries 对象中的每个几何体，计算它的近似表示。近似表示的方法是将每个几何图形中的曲线转换为近似线性表示。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ":obj:`distance <arctern.GeoSeries.distance>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ""
"Calculates the minimum 2D Cartesian (planar) distance between each "
"geometry and other."
msgstr "对于 GeoSeries 对象中的每个几何体，判断它与 `other` 对象中相同位置的几何体之间的最短二维笛卡尔（平面）距离。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ":obj:`distance_sphere <arctern.GeoSeries.distance_sphere>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid "Return minimum distance in meters between two lon/lat points."
msgstr "对于 GeoSeries 对象中的每个几何体，根据经纬度坐标计算地球表面两点之间的最短球面距离。该方法使用 SRID 定义的地球和半径。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ":obj:`envelope_aggr <arctern.GeoSeries.envelope_aggr>`\\ \\(\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ""
"Compute the double-precision minimum bounding box geometry for the union "
"of all geometries."
msgstr "计算包含一组几何体的最小矩形边界范围，且该矩形的边与坐标轴平行。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ":obj:`equals <arctern.GeoSeries.equals>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid "Test whether two objects contain the same elements."
msgstr "判断两个几何体是否含有相同元素。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ""
":obj:`fillna <arctern.GeoSeries.fillna>`\\ \\(\\[value\\, method\\, "
"axis\\, inplace\\, ...\\]\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid "Fill NA values with a geometry, which can be WKT or WKB formed."
msgstr "用几何体填补 NA 值，该几何体可以为 WKT 或 WKB 格式。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ":obj:`from_geopandas <arctern.GeoSeries.from_geopandas>`\\ \\(data\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid "Construct geometries from geopandas GeoSeries."
msgstr "由 geopandas GeoSeries 构造几何体。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ":obj:`geom_equals <arctern.GeoSeries.geom_equals>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid "Check whether each geometry is \"spatially equal\" to other."
msgstr "对于 GeoSeries 对象中的每个几何体，判断它是否与 `other` 对象中相同位置的几何体等价。“等价”表示两个几何体的几何结构相同。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ""
":obj:`geom_from_geojson <arctern.GeoSeries.geom_from_geojson>`\\ "
"\\(json\\[\\, crs\\]\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid "Construct geometry from the GeoJSON representation string."
msgstr "根据 GeoJson 字符串构造几何体。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ""
":obj:`hausdorff_distance <arctern.GeoSeries.hausdorff_distance>`\\ "
"\\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid "Returns the Hausdorff distance between each geometry and other."
msgstr "对于 GeoSeries 对象中的每个几何体，判断它与 `other` 对象中相同位置的几何体之间的 Hausdorff 距离。此距离用于度量两个几何体之间的相似度。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ":obj:`intersection <arctern.GeoSeries.intersection>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid "Calculate the point set intersection between each geometry and other."
msgstr "对于 GeoSeries 对象中的每个几何体，计算它与 `other` 对象中相同位置的几何体之间交集。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ":obj:`intersects <arctern.GeoSeries.intersects>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid "Check whether each geometry intersects other (elementwise)."
msgstr "对于 GeoSeries 对象中的每个几何体，判断它是否与 `other` 对象中相同位置的几何体存在交集。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ":obj:`isna <arctern.GeoSeries.isna>`\\ \\(\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid "Detect missing values."
msgstr "检测丢失值。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ":obj:`make_valid <arctern.GeoSeries.make_valid>`\\ \\(\\)"
msgstr "对于 GeoSeries 对象中的每个几何体，根据它创建一个新的有效的几何体。在构造新几何体过程中，不会删除原始几何体的任何顶点。如果原始几何体本来就是有效的，则直接返回原始几何体。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ""
"Create a valid representation of each geometry without losing any of the "
"input vertices."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ":obj:`notna <arctern.GeoSeries.notna>`\\ \\(\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid "Detect non-missing values."
msgstr "检测未丢失值。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ":obj:`overlaps <arctern.GeoSeries.overlaps>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid "Check whether each geometry \"spatially overlaps\" other."
msgstr "对于 GeoSeries 对象中的每个几何体，判断它是否与 `other` 对象中相同位置的几何体重叠。“重叠”表示两个几何体相交且不互相包含。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ":obj:`point <arctern.GeoSeries.point>`\\ \\(x\\, y\\[\\, crs\\]\\)"
msgstr "根据横坐标集合 `x` 和纵坐标集合 `y` 构造一组 POINT 对象。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid "Construct Point geometries according to the coordinates."
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ""
":obj:`polygon_from_envelope <arctern.GeoSeries.polygon_from_envelope>`\\ "
"\\(min\\_x\\, min\\_y\\, max\\_x\\, max\\_y\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ""
"Construct polygon(rectangle) geometries from arr_min_x, arr_min_y, "
"arr_max_x, arr_max_y and special coordinate system."
msgstr "对于 GeoSeries 对象中的每个几何体，根据给定的参数计算它的最小矩形边界范围，且该矩形的边与坐标轴平行。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ""
":obj:`precision_reduce <arctern.GeoSeries.precision_reduce>`\\ "
"\\(precision\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ""
"For the coordinates of each geometry, reduce the number of significant "
"digits to the given number."
msgstr "对于 GeoSeries 对象中的每个几何体，根据指定的有效数字位数 `precision` 创建降低坐标精度后的几何体。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ":obj:`set_crs <arctern.GeoSeries.set_crs>`\\ \\(crs\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid "Set the coordinate system for the GeoSeries."
msgstr "给 GeoSeries 设置坐标系。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ":obj:`simplify <arctern.GeoSeries.simplify>`\\ \\(tolerance\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ""
"Returns a \"simplified\" version for each geometry using the Douglas-"
"Peucker algorithm."
msgstr "对于 GeoSeries 对象中的每个几何体，计算它的简化表示。简化表示的算法是 Douglas-Peucker 算法。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ":obj:`to_crs <arctern.GeoSeries.to_crs>`\\ \\(crs\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid "Transform each geometry to a different coordinate reference system."
msgstr "转换几何体的坐标参考系。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ":obj:`to_geopandas <arctern.GeoSeries.to_geopandas>`\\ \\(\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid "Transform each arctern GeoSeries to GeoPandas GeoSeries."
msgstr "将 Arctern GeoSeries 转换为 GeoPandas GeoSeries。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ":obj:`to_wkb <arctern.GeoSeries.to_wkb>`\\ \\(\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid "Transform each geometry to WKB formed bytes object."
msgstr "将几何体转换为 WKB 格式的字节对象。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ":obj:`to_wkt <arctern.GeoSeries.to_wkt>`\\ \\(\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid "Transform each geometry to WKT formed string."
msgstr "将几何体转换为 WKT 格式的字符串。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ":obj:`touches <arctern.GeoSeries.touches>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid "Check whether each geometry \"touches\" other."
msgstr "对于 GeoSeries 对象中的每个几何体，判断它是否与 `other` 对象中相同位置的几何体相邻。“相邻”表示两个几何体在边界上有共同的点。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ":obj:`unary_union <arctern.GeoSeries.unary_union>`\\ \\(\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ""
"Return a geometry that represents the union of all geometries in the "
"GeoSeries."
msgstr "返回一个代表一组几何体的并集的几何体。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid ":obj:`within <arctern.GeoSeries.within>`\\ \\(other\\)"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:51:<autosummary>:1
msgid "Check whether each geometry is within other (elementwise)."
msgstr "对于 GeoSeries 对象中的每个几何体，判断它是否在 `other` 对象中相同位置的几何体的内部。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:53
msgid "Attributes"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:65:<autosummary>:1
msgid ":obj:`area <arctern.GeoSeries.area>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:65:<autosummary>:1
msgid "Calculate the 2D Cartesian (planar) area of each geometry."
msgstr "计算 GeoSeries 对象中每个几何体的面积。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:65:<autosummary>:1
msgid ":obj:`centroid <arctern.GeoSeries.centroid>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:65:<autosummary>:1
msgid "Compute the centroid of each geometry."
msgstr "计算 GeoSeries 对象中每个几何体的中心点。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:65:<autosummary>:1
msgid ":obj:`convex_hull <arctern.GeoSeries.convex_hull>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:65:<autosummary>:1
msgid ""
"For each geometry, compute the smallest convex geometry that encloses all"
" geometries in it."
msgstr "对于 GeoSeries 对象中的每个几何体，计算包围它的最小的凸几何体。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:65:<autosummary>:1
msgid ":obj:`crs <arctern.GeoSeries.crs>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:65:<autosummary>:1
#, fuzzy
msgid "Return the coordinate system of the GeoSeries."
msgstr "GeoSeries 的参考坐标系现在只支持 SRID 格式。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:65:<autosummary>:1
msgid ":obj:`envelope <arctern.GeoSeries.envelope>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:65:<autosummary>:1
msgid ""
"Compute the double-precision minimum bounding box geometry for each "
"geometry."
msgstr "对于 GeoSeries 对象中的每个几何体，计算它的最小矩形边界范围。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:65:<autosummary>:1
msgid ":obj:`geom_type <arctern.GeoSeries.geom_type>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:65:<autosummary>:1
msgid "For each geometry in geometries, return a string that indicates is type."
msgstr "对于 GeoSeries 对象中的每个几何体，返回一个表示类型的字符串。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:65:<autosummary>:1
msgid ":obj:`is_simple <arctern.GeoSeries.is_simple>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:65:<autosummary>:1
msgid "Check whether each geometry is \"simple\"."
msgstr "判断 GeoSeries 对象中的每个几何体是否简单。这里的“简单”表示某个几何图形没有异常的几何图形点，例如自相交或相切。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:65:<autosummary>:1
msgid ":obj:`is_valid <arctern.GeoSeries.is_valid>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:65:<autosummary>:1
msgid "Check if each geometry is of valid geometry format."
msgstr "判断 GeoSeries 对象中的每个几何体是否有效。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:65:<autosummary>:1
msgid ":obj:`length <arctern.GeoSeries.length>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:65:<autosummary>:1
msgid "Calculate the length of each geometry."
msgstr "计算 GeoSeries 对象中每个几何体的长度。如果几何体不是 LineString 和 MultiLineString 类型的几何体， 则它的长度为 0 。"

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:65:<autosummary>:1
msgid ":obj:`npoints <arctern.GeoSeries.npoints>`\\"
msgstr ""

#: ../../source/api_reference/standalone_api/api/arctern.GeoSeries.rst:65:<autosummary>:1
msgid "Calculates the points number for each geometry."
msgstr "对于 GeoSeries 对象中的每个几何体，计算它的点的数量。"

#~ msgid ""
#~ ":obj:`projection <arctern.GeoSeries.projection>`\\ "
#~ "\\(bottom\\_right\\, top\\_left\\, height\\, "
#~ "width\\)"
#~ msgstr ""

#~ msgid "TODO(shengjh): fill here"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`simplify_preserve_to_pology "
#~ "<arctern.GeoSeries.simplify_preserve_to_pology>`\\ "
#~ "\\(distance\\_tolerance\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`transform_and_projection "
#~ "<arctern.GeoSeries.transform_and_projection>`\\ \\(src\\_rs\\,"
#~ " dst\\_rs\\, ...\\)"
#~ msgstr ""

#~ msgid ":obj:`union_aggr <arctern.GeoSeries.union_aggr>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ":obj:`geometry_type <arctern.GeoSeries.geometry_type>`\\"
#~ msgstr ""

#~ msgid ":obj:`from_geopandas <arctern.GeoSeries.from_geopandas>`\\ \\(data\\)"
#~ msgstr ""

#~ msgid "Construct geometries from geopandas GeoSeries."
#~ msgstr ""

#~ msgid ":obj:`simplify <arctern.GeoSeries.simplify>`\\ \\(tolerance\\)"
#~ msgstr ""

#~ msgid ":obj:`to_geopandas <arctern.GeoSeries.to_geopandas>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "Transform each arctern GeoSeries to GeoPandas GeoSeries."
#~ msgstr ""

#~ msgid ":obj:`unary_union <arctern.GeoSeries.unary_union>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ":obj:`geom_type <arctern.GeoSeries.geom_type>`\\"
#~ msgstr ""

#~ msgid "Initialize self.  See help(type(self)) for accurate signature."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`__init__ <arctern.GeoSeries.__init__>`\\ "
#~ "\\(\\[data\\, index\\, name\\, crs\\]\\)"
#~ msgstr ""

#~ msgid "Initialize self."
#~ msgstr ""

